@using HiddenVilla_Server.Model

<div class="bg-light border p-2 col-5 offset-1">
    <h4 class="text-secondary">Room - @room.Id</h4>

    <input type="checkbox" @onchange="RoomCheckBoxSelectionChanged" />
    @room.RoomName <br />
    @room.Price.ToString("c")<br />
    <input type="checkbox" @bind-value="room.IsActive" checked="@(room.IsActive?"checked":null)" /> &nbsp; Is Active <br />
    <span>This room is @(room.IsActive ? "Active" : "Inactive")</span>

    @if (room.IsActive)
    {
        @foreach (var roomProp in room.RoomProps)
        {
            <p>@roomProp.Name - @roomProp.Value</p>
        }
    }

    <EditDeleteButon IsAdmin="true" />

</div>

@code {
    [Parameter]
    public BlazorRoom room { get; set; }

    [Parameter]
    public EventCallback<bool> OnRoomCheckBoxSelection { get; set; }

    protected async Task RoomCheckBoxSelectionChanged(ChangeEventArgs e)
    {
        await OnRoomCheckBoxSelection.InvokeAsync((bool)e.Value);
    }
}
